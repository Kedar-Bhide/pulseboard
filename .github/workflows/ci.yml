name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pulseboard_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Python dependencies
      run: |
        cd apps/backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Install Node.js dependencies
      run: |
        cd apps/frontend
        npm install

    - name: Run backend tests
      run: |
        cd apps/backend
        pytest --cov=app tests/

    - name: Run frontend tests
      run: |
        cd apps/frontend
        npm test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Python dependencies
      run: |
        cd apps/backend
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Install Node.js dependencies
      run: |
        cd apps/frontend
        npm install

    - name: Run Python linters
      run: |
        cd apps/backend
        flake8 app tests
        black --check app tests
        isort --check-only app tests

    - name: Run TypeScript linter
      run: |
        cd apps/frontend
        npm run lint 